import os
import supervision as sv
import cv2
import shutil
import multiprocessing



def main():

        # Folder
    product_folder = 'Carne'

    # Get current working directory
    HOME = os.getcwd()

    # Get the path of the data
    DATA = os.path.join(HOME, 'Data')
    IMAGES = os.path.join(DATA, product_folder, 'Images')

    # Check if the path exists and image count
    image_paths = sv.list_files_with_extensions(
        directory=IMAGES, 
        extensions=["png", "jpg", "bmp"])

    print('image count:', len(image_paths))


    # Plot set of images
    SAMPLE_SIZE = 16
    SAMPLE_GRID_SIZE = (4, 4)
    SAMPLE_PLOT_SIZE = (16, 16)

    titles = [
        image_path.stem
        for image_path
        in image_paths[:SAMPLE_SIZE]]
    images = [
        cv2.imread(str(image_path))
        for image_path
        in image_paths[:SAMPLE_SIZE]]

    sv.plot_images_grid(images=images, titles=titles, grid_size=SAMPLE_GRID_SIZE, size=SAMPLE_PLOT_SIZE)


    # Dataset - a Dataset is a set of auto-labeled data that can be used to train a Target Model. It is the output generated by a Base Model.

    ANNOTATIONS_DIRECTORY_PATH = f"{DATA}/dataset/train/labels"
    IMAGES_DIRECTORY_PATH = f"{DATA}/dataset/train/images"
    DATA_YAML_PATH = os.path.join(DATA, 'dataset', 'data.yaml')


    # Target Model - a Target Model is a supervised model that consumes a Dataset and outputs a distilled model that is ready for deployment. 
    # Target Models are usually small, fast, and fine-tuned to perform a specific task very well (but they don't generalize well beyond the information described in their Dataset). 
    # Examples of Target Models are YOLOv8 and DETR.

    from autodistill_yolov8 import YOLOv8

    target_model = YOLOv8("yolov8n.pt")

    target_model.train(DATA_YAML_PATH, epochs=250)


    # Target Model Evaluation

    from IPython.display import Image

    # Image(filename=f'{HOME}/runs/detect/train/confusion_matrix.png', width=600)

    # Image(filename=f'{HOME}/runs/detect/train/results.png', width=600)

    # Image(filename=f'{HOME}/runs/detect/train/val_batch0_pred.jpg', width=600)
        

if __name__ == '__main__':
    multiprocessing.freeze_support()
    main()